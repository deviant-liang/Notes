#include <iostream>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <cstring>
#include <unistd.h>

#define MULTICAST_GROUP "239.255.0.1"  // Example multicast address
#define PORT 12345                     // Example port

int main() {
    int sockfd;
    struct sockaddr_in multicast_addr;
    const char *message = "Hello, Multicast!";
    int ttl = 1;  // Time to live for the multicast packet

    // Create a raw socket for sending
    sockfd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);
    if (sockfd < 0) {
        perror("socket");
        return 1;
    }

    // Set the time to live (TTL)
    if (setsockopt(sockfd, IPPROTO_IP, IP_MULTICAST_TTL, &ttl, sizeof(ttl)) < 0) {
        perror("setsockopt (TTL)");
        close(sockfd);
        return 1;
    }

    // Configure the destination multicast address
    memset(&multicast_addr, 0, sizeof(multicast_addr));
    multicast_addr.sin_family = AF_INET;
    multicast_addr.sin_port = htons(PORT);
    inet_pton(AF_INET, MULTICAST_GROUP, &multicast_addr.sin_addr);

    // Send the message to the multicast group
    if (sendto(sockfd, message, strlen(message), 0, (struct sockaddr*)&multicast_addr, sizeof(multicast_addr)) < 0) {
        perror("sendto");
        close(sockfd);
        return 1;
    }

    std::cout << "Sent multicast message: " << message << std::endl;

    close(sockfd);
    return 0;
}
